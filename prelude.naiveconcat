
-- FLOW CONTROL

-- if
-- `{"consequent" say} {"alternative" say} false if apply`
-- => "alternative"
{
  "predicate" define 
  "alternative" define
  "consequent" define
  consequent predicate then
  alternative predicate not then
  apply
} "if" define

-- each
{ -- Not tail recursive, could have bad performance
	"f" define
	length "l" define
	{
		lop 
		f apply
		{f each apply}  length 0 = not  then apply
	} l 0 = not then apply
} "each" define

-- STACK MANIPULATION

{
  "a" define
  "b" define
  a b
} "swap" define
